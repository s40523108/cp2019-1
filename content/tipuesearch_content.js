var tipuesearch = {"pages": [{'title': 'About', 'text': '這裡是國立虎尾科技大學機械設計工程系大一計算機程式課程網頁, 與本課程相關的網頁與倉儲如下: \n Github Pages 網站: \n http://mde.tw/cp2019 \xa0(本網頁的 Github Pages) \n http://mde.tw/cp2019_fall \xa0(本課程的規劃網頁) \n http://mde.tw/cp2019_summer \xa0(本課程的參考網頁) \n Github 倉儲: \n https://github.com/mdecourse/cp2019 \n https://github.com/mdecourse/cp2019_fall \n https://github.com/mdecourse/cp2019_summer \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'QandA', 'text': '與計算機程式課程有關的問題, 請在\xa0 https://github.com/mdecourse/cp2019/issues/4 \xa0中提出. \n 在校區內所使用的電腦, 可以透過\xa0 https://software.nfu.edu.tw/ \xa0取得各項教育版軟體, 其中包括 Windows 操作系統與 MS Office 以及 AutoDesk 教育版相關套件. \n 當使用者位於校區外, 希望連線使用校區內的相關電腦資料, 包括下載教育版軟體或使用各項電子期刊或電子書, 可以利用\xa0 https://nfucc.nfu.edu.tw/zh/download/download-network/ssl-vpn \xa0連線後使用.', 'tags': '', 'url': 'QandA.html'}, {'title': 'USB 隨身碟', 'text': '本課程建議使用隨身碟儲存所有與課程相關的倉儲或網頁資料, 也可只將與個人設定相關及倉儲存放在 USB 隨身碟中. \n 注意: 將資料存入 USB 隨身碟之前, 務必檢查所使用格式化的規格, 一般出廠 USB 格式化仍採用  FAT32  格式, 之後將無法存放大於 4GB 的檔案, 因此建議使用之前將 USB 隨身碟格式化為  exFAT  格式. \n USB 存放整個可攜系統 \n 優點: \n 可以自行配置安裝系統中的模組 \n 缺點: \n 執行速度比硬碟慢 \n USB 只存放設定與自我倉儲 \n 優點: \n 執行速度較全部存入 USB 快 \n 缺點: \n 其他用戶對硬碟系統資料更動後, 使用上會受影響. \n 全部使用隨身碟內容啟動的 start.bat 批次檔案: \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\nset PYTHONPATH=%Disk%:\\py373\\DLLs;%Disk%:\\py373\\Lib;%Disk%:\\py373\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py373\n\nREM for flutter\nset java_home=%Disk%:\\java\\jdk8u222-b10\nset ANDROID_SDK_home=%Disk%:\\home_mdecourse\nset GRADLE_USER_home=%Disk%:\\home_mdecourse\nset ANDROID_SDK_ROOT=%Disk%:\\android\\sdk\nset PUB_CACHE=%Disk%:\\home_mdecourse\\pub\n\nREM set _JAVA_OPTIONS=-Duser.home=%HOME%\nset path_flutter=%Disk%:\\android\\sdk\\tools;%Disk%:\\android\\sdk\\tools\\bin;%Disk%:\\android\\sdk\\platform-tools;%Disk%:\\flutter\\bin;%Disk%:\\flutter\\bin\\cache\\dart-sdk\\bin;\n\nset path_python=%Disk%:\\py373;%Disk%:\\py373\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64;\nset path_tcc=%Disk%:\\tcc;\nset path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_xming=%Disk%:\\Xming;\nset path_latex=%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32;\nset path_vscode=%Disk%:\\vscode;\n\npath=%path%;%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path_flutter%;%path_vscode%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\n\n\nExit \n 只存放設定與自我倉儲的\xa0 start.bat 批次檔案: \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nREM 設定所使用的硬碟目錄\nset CDisk=G:\\201906_fall\\data\nset DDisk=D:\\flutter_portable_final\\data\n\nset HomePath=%Disk%:\\home\nset HomeDrive=%Disk%:\\home\nset Home=%Disk%:\\home\nset USERPROFILE=%Disk%:\\home\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\nset PYTHONPATH=%CDisk%\\py373\\DLLs;%CDisk%\\py373\\Lib;%CDisk%\\py373\\Lib\\site-packages;\nset PYTHONHOME=%CDisk%\\py373\n\nREM for flutter\nset java_home=%DDisk%\\java\\jdk8u222-b10\nset ANDROID_SDK_home=%DDisk%\\home\nset GRADLE_USER_home=%DDisk%\\home\nset ANDROID_SDK_ROOT=%DDisk%\\android\\sdk\nset PUB_CACHE=%Disk%\\home\\pub\n\nREM set _JAVA_OPTIONS=-Duser.home=%HOME%\nREM %DDisk%\\home\\pub\\bin is for webdev\nset path_flutter=%DDisk%\\android\\sdk\\tools;%DDisk%\\android\\sdk\\tools\\bin;%DDisk%\\android\\sdk\\platform-tools;%DDisk%\\flutter\\bin;%DDisk%\\flutter\\bin\\cache\\dart-sdk\\bin;%Disk%\\home\\pub\\bin;\n\nset path_python=%CDisk%\\py373;%CDisk%\\py373\\Scripts;\nset path_msys2=%CDisk%\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%CDisk%\\coreutils-5.3.0\\bin;%CDisk%\\depends22_x64;\nset path_tcc=%CDisk%\\tcc;\nset path_cmake=%CDisk%\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=%CDisk%\\nodejs;%CDisk%\\nodejs\\appdata\\roaming\\npm;\nset path_git=%CDisk%\\portablegit\\bin;\nset path_xming=%CDisk%\\Xming;\nset path_latex=%CDisk%\\Pandoc;%CDisk%\\TinyTeX\\bin\\win32;\nset path_vscode=%DDisk%\\vscode;\n\npath=%path%;%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path_flutter%;%path_vscode%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %CDisk%\\wscite415\\wscite\\SciTE.exe\nstart /MIN %CDisk%\\wscite415\\wscite\\SciTE.exe\n\n\nExit \n stop.bat 批次檔案: \n @echo off\nset Disk=y\npath=%PATH%;\n\ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM node.exe /F\ntaskkill /IM Range.exe /F\ntaskkill /IM SciTE.exe /F\ntaskkill /IM adb.exe /F\ntaskkill /IM code.exe /F\ntaskkill /IM java.exe /F\n\nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\nEXIT \n 請注意: \n 因為開啟 code 後所需先前的相關 Flutter 專案, 會將與 Android 相關, 取得的 package 放在 PUB_CACHE (即 y:\\home\\pub), 以及\xa0 .android (即 y:\\home\\.android) 目錄中, 因此搬遷資料時必須同時複製此一目錄內容. \n 而且需要建立 y:\\home\\AppData\\Roaming 目錄, 以便存放 vscode 啟動後的 logs 檔案.', 'tags': '', 'url': 'USB 隨身碟.html'}, {'title': '課程筆記', 'text': '利用倉儲與網頁紀錄筆記 \n 優點: \n 快速方便且能引入大量線上靜態與動態影片資料 \n 缺點: \n 必須要透過歷程資料才能看出資料紀載順序 \n 若電腦無法開機或網路無法使用時, 將無法查閱相關資料 \n 利用紙本筆記 \n 優點: \n 手寫將資料謄入紙本時, 可以加強對資料的記憶 \n 可以按照順序紀載歷程資料 \n 缺點: \n 必須隨身攜帶筆記本 \n 比較難以放入網路上的各項連結資料', 'tags': '', 'url': '課程筆記.html'}, {'title': '課程簡介', 'text': '說明課程進行方式, 評分方式與課程目標 \n 課程進行方式 - 每週講解與示範, 並錄下基本操作影片素材, 週四上機與助教時間, 分組建立帶有字幕的教學影片, 各組員與小組每週維護倉儲與網站內容. \n 評分方式 - 利用線上表單, 學員每週進行自評與互評, 教師根據各組員與小組所完成的教學影片, 倉儲維護歷程與網站內容進行評分, 依照上述三種成績與相關流程計算各學員期中與期末成績. \n 課程目標 - 學員可利用 Git, Fossil SCM 與 Github 進行分組協同, 獨立維護網站, 利用帶有字幕的教學影片與網頁內容進行工程表達, 學習如何利用電腦、網路與程式執行協同機械產品設計分析與開發. \n 附註: \n 因機械設計產品開發之異地協同設計需求, 而衍生出對於建立 USB 可攜程式隨身碟之必要. \n 因同步分散式程式開發之模式, 而衍生出對於分散式版次管理系統之需求. \n 因追求最佳化機械設計流程開發, 而衍生出利用程式及網路進行工程分析之需求. \n 因為透過帶字幕的教學影片製作, 可證明對於特定計算機程式主題的了解程度, 並藉由網站簡報資料的建立與發布, 可提高各學員相互學習的成效.', 'tags': '', 'url': '課程簡介.html'}, {'title': '亂數分組', 'text': '流程圖符號 \n \n 上課第一週即進行學員亂數分組, 計算機程式的實際應用與程式對應語法的介紹, 將從此一程式的開發啟動 \n 基本流程: \n 取得各班修課程成員的學號資料 \n 決定每組幾人 \n 將學員學號資料的次序弄亂 \n 依據每組幾人, 從頭開始分組, 以確定各組成員 \n 若最後一組人數過少, 將分別依序捕到前述已經分組的組別中 \n 在課程加退選階段結束後, 各組再清算所餘人數是否得當, 不排除重新分組 \n 各班檢討是否整個學期只分組一次, 或分組兩次, 或更多次的優缺點, 依據討論結果進行後續課程任務分組 \n 為何使用 Python? \n If you do much work on computers, eventually you find that there’s some task you’d like to automate. For example, you may wish to perform a search-and-replace over a large number of text files, or rename and rearrange a bunch of photo files in a complicated way. Perhaps you’d like to write a small custom database, or a specialized GUI application, or a simple game. \n If you’re a professional software developer, you may have to work with several C/C++/Java libraries but find the usual write/compile/test/re-compile cycle is too slow. \n Perhaps you’re writing a test suite for such a library and find writing the testing code a tedious task. Or maybe you’ve written a program that could use an extension language, and you don’t want to design and implement a whole new language for your application. \n Python is just the language for you. \n 首先我們將採用 Python 進行亂數分組, 各分組也可以研究看看, 假如採用 C, C++, Java, Javascript, Lua 或 Dart 進行類似的工作, 該如何進行? \n 是直接在命令列中執行, 寫一個配合的 GUI, 在網頁介面中執行, 或者在手機或平板上執行? 各有何種應用情境?\xa0', 'tags': '', 'url': '亂數分組.html'}, {'title': 'github 帳號', 'text': '建立 cp2019 倉儲及對應的 CMSiMDE Github Pages 網頁 \n 了解基本的 Git 指令與 Github 系統的應用之後, 產生出對 GitExtensions 工具的需求, 也產生出對於透過 SSH keys 提交倉儲版本的需求, 以簡化改版流程. \n https://2019wcm.blogspot.com/search/label/GitExtensions \n https://2019wcm.blogspot.com/search/label/ssh \n 申請 Github 帳號 \n 登入 @gm 電子郵箱, 然後以學號申請 Github 帳號, 待驗證所使用的學號@gm 電子郵箱後, 即可建立 cp2019 倉儲, 特別注意新增 public repository 時, 可啟用 README.md, 隨即可以在近端以 \n git clone  https://github.com/學號/cp2019.git \n 將遠端 Github 倉儲中的資料, clonr 至 y:\\tmp 目錄的 cp2019 目錄中. \n clone 後的 cp2019 目錄有 .git 目錄, 存放該倉儲的設定與版本資料, 以及 README.md 檔案. \n 在 .git 目錄中, 與使用者相關的是 config \n 以子模組方式納入 CMSiMDE \n 利用 git submodule add 納入 CMSiMDE 網際內容管理系統的程式碼 \n https://github.com/mdecourse/cmsimde \n 利用命令列視窗, 更換目錄至 y:\\tmp\\cp2019 之後, 執行 \n git submodule add https://github.com/mdecourse/cmsimde.git cmsimde \n 意即, 在此目錄中, 將 https://github.com/mdecourse/cmsimde.git 倉儲資料納為近端 cmsimde 目錄的內容, 且作為 submodule, 也就是設定一個倉儲的子模組, 並將此子模組與 https://github.com/mdecourse/cmsimde.git 倉儲目前的最新版本內容. \n 將子模組中 up_dir 目錄中的內容往前搬一個目錄 \n 在 y:\\tmp\\cp2019\\cmsimde 目錄中, 以 \n python wsgi.py \n 就可以啟動近端的動態網際內容管理系統, 作為近端改版之用, 可以瀏覽器中的 https://localhost:9443 連接所啟用的 CMS (Content Management System). \n 並以 admin 管理者密碼登入. \n 進入 config 修改網頁標題, 並且修改倉儲中的 init.py, 修改 site_title \n 改版後要推送資料前, 可以利用 generate_pages 將內容轉為動態網頁後, 可以利用 SciTE 開啟倉儲中的\xa0http-server.py 檔案後以 Tools -> Go 執行, 可以在瀏覽器中以  https://localhost:8444 \xa0檢查近端的靜態網頁內容, 確定無誤後. 則必須再退回 y:\\tmp\\cp2019 目錄之後, 必須完成 git config 的 user.name 與 user.email 之後, 可以利用: \n git add . git commit -m "提交說明" git push \n 以 SSH 對 cp2019 倉儲進行改版 \n 如何產生所需的 keys, 放在哪裡, public key 要送到哪裡, 設定如何寫, 在 http 模式下, 代理主機如何執行設定, 在 ssh 模式下, 代理主機要如何設定? 若近端啟動後使用超過一個 github 帳號身分, 又如何設定 http 與 ssh 模式下的倉儲改版與提交? \n 如何 git clone 帶有子模組的倉儲 \n git submodule 使用說明 \n 當在近端 git clone 帶有子模組的倉儲時, 首先: \n git clone 倉儲_URL.git 近端倉儲名稱 \n 之後, 以 git submodule init 啟始子模組, 接著以 git submodule update 下載所對應版本的子模組內容. \n 為何倉儲中要引用子模組? \n 子模組架構的設計與引用, 可以讓子模組的開發者根據需求隨時改版, 而引用者只需要確立所引用的子模組版次號, 即可在原始引用組態 (組成內容與狀態) 下正確協同工作. \n 在機械設計流程, 想像所有系統與元件都是虛擬物件, 與 github 中的倉儲程式碼類似. \n 當導入一只特殊規格的電動馬達後, 配合減速機與機構執行所需工作, 若將該馬達當成 git 的子模組, 負責研發此電動馬達的團隊, 可以不斷根據新技術的導入或修正先前的設計, 所產生新的馬達版本, 不會影響使用舊馬達版本的用戶. (請注意, 引入子模組之後的倉儲, 在其 .git 目錄中的 config 與倉儲目錄中的 .gitmodules 都註記所引用的子模組來源.) \n 這時引用該馬達的機械設計模擬系統, 在不變更使用該馬達元件版本的情況下, 原始設計可以繼續出貨, 若需配合該馬達的新功能而修改其他設計之後, 只需要執行 git submodule update, 就可以取得該馬達的最新型功能, 產生最新版的機械設計內容.\xa0 \n 各組利用 Python 程式模組, 練習建立並使用 git 子模組.', 'tags': '', 'url': 'github 帳號.html'}, {'title': 'Github Guide', 'text': 'https://guides.github.com/ \n https://guides.github.com/activities/hello-world/', 'tags': '', 'url': 'Github Guide.html'}, {'title': '示範專案', 'text': 'Python: 一般運算與資料處理應用, 網際內容管理, GUI for 電腦輔助機械設計工程分析 \n ANSI C: 建立 Fossil SCM \n C++: Solvespace 與 Pyslvs 平面機構合成與分析內之幾何運算核心 \n Dart: 配合 Flutter SDK 開發手機應用程式 \n 手機程式作為介面 <-> Python Flask 作為 Server 端程式負責與其他 C/C++/Python 核心執行運算', 'tags': '', 'url': '示範專案.html'}, {'title': 'Python', 'text': 'python 3.7.2 tutorial.pdf \n 亂數分組與 CMSiMDE \n https://github.com/mdecourse/cmsimde \n', 'tags': '', 'url': 'Python.html'}, {'title': 'ANSIC', 'text': 'Fossil SCM \n https://www.fossil-scm.org', 'tags': '', 'url': 'ANSIC.html'}, {'title': 'C++', 'text': 'Solvespace and Pyslvs \n https://github.com/solvespace/solvespace \n https://github.com/KmolYuan/Pyslvs-UI', 'tags': '', 'url': 'C++.html'}, {'title': 'Flutter', 'text': 'https://flutter.dev/docs \n 第一步: \n 登入 @gm 電子郵箱後, 下載可放入 USB 隨身碟運作的可攜系統: \n \xa0 flutter_portable_final.7z \n 第二步: \n 解開 flutter_portable_final.7z, 並在執行手機程式開發的 Windows 10 64 位元電腦上安裝\xa0 https://www.bluestacks.com \xa0(也可以安裝 ref 目錄中的 Bluestacks 4.0 舊版本) \n 之後, 我們可以直接啟動\xa0 Flutter 隨身系統後, 利用電腦上的 Bluestacks 執行手機程式. \n 第三步: \n 啟動 Flutter 可攜系統後, 可以直接在命令列中輸入 code, 啟動 Visual Studio Code 程式編輯系統. \n 第四步: \n 執行第二步在操作系統中所安裝的 Bluestacks, 開啟後, 在命令列中以 adb connect localhost:5555, 以便之後將 Visual Studio Code 中的 Flutter 程式結果呈現在 Bluestacks 虛擬手機畫面中. \n 由於 Bluestacks 採用與 Virualbox 相同的虛擬主機模式, 適合在 CPU 等級較低的電腦上執行開發, 也可以在 Visual Studio Code 中按下 Ctrl + Shift + P, 然後輸入 flutter, 除了可以新建 Flutter 專案外, 也可以透過 Android Virtual Devices 指令, 建立 emulator, 並將編譯完成的手機程式結果, 呈現在對應的 emulator 中. \n 當然, 若使用者已經安裝並設置 https://developer.android.com/studio/run/win-usb , 也可以直接利用 USB 連接實體 Android 手機進行程式開發測試. \n 專案範例 \n https://medium.com/flutter-community/flutter-firebase-realtime-database-crud-operations-using-provider-c242a01f6a10 \n https://github.com/flutter-ui-challenges/flutter_web_challenge_googlemaps \n https://medium.com/flutter-community/writing-a-flutter-data-entry-form-app-for-a-rental-agency-e5a7dab20596 \n https://medium.com/flutter-community/using-svg-in-flutter-3dcf7b1dd713 \n https://medium.com/analytics-vidhya/deploy-ml-models-using-flask-as-rest-api-and-access-via-flutter-app-7ce63d5c1f3b \n', 'tags': '', 'url': 'Flutter.html'}, {'title': 'Dart', 'text': 'https://dart.dev/guides/language \n https://dart.dev/guides/language/language-tour \n https://dart.dev/tools/sdk/archive \n https://dartpad.dartlang.org/ \n https://flutter.dev/ \n https://github.com/flutter/samples \n https://github.com/Solido/awesome-flutter \n 安裝 Dart SDK \n https://dart.dev/get-dart \n https://storage.googleapis.com/dart-archive/channels/stable/release/2.4.1/sdk/dartsdk-windows-x64-release.zip \n Dart FFI \n https://github.com/dart-lang/sdk/blob/master/samples/ffi/sqlite/docs/sqlite-tutorial.md \n https://github.com/mjohnsullivan/ffi \n Dart Pad \n embeded gist:\xa0 https://gist.github.com/scrum-1/d83c705a831668f76d2a39b97c5cb1c9 \n https://dartpad.dev/embed-html.html?id=d83c705a831668f76d2a39b97c5cb1c9 \n Hello Dart \n https://dartpad.dartlang.org/embed-inline.html?id=1a980b16e56b1d1781720bf7d1ffc691 \n void main() {\n  print("Hello, World!");\n} \n Dart 程式語言 \n https://da-bootcamp.firebaseapp.com/?course=start_programming_dart \xa0 \n 每一個 Dart 程式都以小寫英文字母的 main() 主函式開始執行, 函式可以從 () 小括號中間接受輸入, 也可以產生輸出, 小括號中間空白, 表示這個函式沒有輸入的設計, 而 main 之前的 void 表示目前的函式也沒有輸出的設計. \n Dart 程式的執行範圍區隔與 C/C++ 等程式語法相同, 利用 {} 來界定該函式的有效範圍 (Python 程式語法是利用縮排, 以每四個空白鍵為單位, 每一個縮排範圍內的程式碼界定為一區. \n 在這個 Dart 程式中, void 與 print 都是關鍵字 (main 不屬於關鍵字, 可以當作變數名稱, 但並不建議使用), 關鍵字在程式語言的語法中稱為保留字, 具有特殊的用法與意義, 當使用者要命名變數時, 不可以使用該程式語言中所規定的關鍵字. \n 而 Dart 程式語法中的關鍵字共有: \n Keywords \n The following table lists the words that the Dart language treats specially. \n \n \n \n abstract \xa0 2 \n dynamic \xa0 2 \n implements \xa0 2 \n show \xa0 1 \n \n \n as \xa0 2 \n else \n import \xa0 2 \n static \xa0 2 \n \n \n assert \n enum \n in \n super \n \n \n async \xa0 1 \n export \xa0 2 \n interface \xa0 2 \n switch \n \n \n await \xa0 3 \n extends \n is \n sync \xa0 1 \n \n \n break \n external \xa0 2 \n library \xa0 2 \n this \n \n \n case \n factory \xa0 2 \n mixin \xa0 2 \n throw \n \n \n catch \n false \n new \n true \n \n \n class \n final \n null \n try \n \n \n const \n finally \n on \xa0 1 \n typedef \xa0 2 \n \n \n continue \n for \n operator \xa0 2 \n var \n \n \n covariant \xa0 2 \n Function \xa0 2 \n part \xa0 2 \n void \n \n \n default \n get \xa0 2 \n rethrow \n while \n \n \n deferred \xa0 2 \n hide \xa0 1 \n return \n with \n \n \n do \n if \n set \xa0 2 \n yield \xa0 3 \n \n \n \n Avoid using these words as identifiers. However, if necessary, the keywords marked with superscripts can be identifiers: \n \n \n Words with the superscript \xa0 1 \xa0 are \xa0 contextual keywords , which have meaning only in specific places. They’re valid identifiers everywhere. \n \n \n Words with the superscript \xa0 2 \xa0 are \xa0 built-in identifiers . To simplify the task of porting JavaScript code to Dart, these keywords are valid identifiers in most places, but they can’t be used as class or type names, or as import prefixes. \n \n \n Words with the superscript \xa0 3 \xa0 are newer, limited reserved words related to the \xa0 asynchrony support \xa0 that was added after Dart’s 1.0 release. You can’t use \xa0 await \xa0 or \xa0 yield \xa0 as an identifier in any function body marked with \xa0 async , \xa0 async* , or \xa0 sync* . \n \n \n All other words in the table are \xa0 reserved words , which can’t be identifiers. \n 上述 Dart 程式段中的 ";" 表示該行至分號的位置為一個完整可執行段程式 (use a semicolon to tell the interpreter where your statement ends.), 這一點也與 C/C++ 程式語法相同,\xa0 (Python 程式則一般利用跳行來界定可執行段, 但也可以利用 ";" 來界定). \n 變數 \n 了解 Dart 程式的基本用法後, 也知道那些英文字是設計作為保留關鍵字, 接下來就需要了解有關程式中有關變數的命名. \n All declared variables in Dart are initially given the special value of null. \n Unlike in algebra class, the = operator in Dart does not strictly represent equivalence. It\'s known as the assignment operator, so x = 5 is an expression instructing the computer to assign the value 5 to a memory location named x.\xa0 \n \n \n', 'tags': '', 'url': 'Dart.html'}, {'title': 'DartPad', 'text': 'DartPad 有原始碼, 我們可以建立一個網際的 Dart 程式語言教學套件嗎? \n https://github.com/dart-lang/dart-pad \n 讓使用者所練習的 Dart 程式可以存檔, 可以呼叫修改, 也可以轉換成 Web, Mobile 與單機程式? \n 或者利用 Dart 建立一個以機械設計流程為主體的網際內容管理系統? \n 自行 Build dart-pad: \n git clone\xa0 https://github.com/dart-lang/dart-pad \n 之後, 進入 dart-pad 目錄之後, 以 pub get 取得所需 dependencies \n 然後以 webdev build 之後, 將會在 build\xa0 目錄中產生所需的相關檔案. \n 之後刪除 .git 與 .gitignore 檔案,\xa0 將 build 目錄改名為 docs 並設為 Github Pages 得到: \n https://mde.tw/dartpad \xa0', 'tags': '', 'url': 'DartPad.html'}]};